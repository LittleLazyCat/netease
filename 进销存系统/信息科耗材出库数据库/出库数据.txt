人员表tb_employee
人员编号YGID tinyint(3) zerofill primary key;
姓名YGXM char(4) not null default ' ';

材料大类表tb_category_kind
大类编号DLID tinyint(3) zerofill auto_increment primary key;
大类名称DLMC varchar(10) not null default ' ' unique;

材料表tb_category
材料编号CLID smallint(4) zerofill auto_increment primary key;
大类编号DLID tinyint(3) unsigned zerofill ;
材料名称CLMC varchar(10) not null default ' ' unique;

申请科室表tb_dept
科室编号KSID smallint(4) zerofill auto_increment primary key;
科室名称KSMC varchar not null default ' ';

出库表tb_stock_out
出库编号CKBH mediumint(8) zerofill auto_increment primary key;
出库时间CKSJ date not null default ' ';
出库材料编号 CLBH smallint(4);
申请数量SQSL tinyint not null default 0;
实发数量SFSL tinyint not null default 0;
申请科室编号KSID smallint(4);
出库人员编号YGID tinyint(3);


DROP TABLE IF EXISTS  tb_employee;
create table tb_employee
(
 YGID tinyint(3) zerofill primary key,
 YGXM char(4) not null default ' '	
)engine innodb default charset utf8 COMMENT = '职工信息表';



DROP TABLE IF EXISTS tb_category_kind;
create table tb_category_kind
(
DLID tinyint(3) zerofill auto_increment primary key,
DLMC varchar(10) not null default ' ' unique	
)engine innodb default charset utf8 COMMENT = '材料大类表';



DROP TABLE IF EXISTS tb_category;
create table tb_category
( 
CLID smallint(4) zerofill auto_increment primary key,
DLID tinyint(3) unsigned zerofill ,
CLMC varchar(10) not null default ' ' unique,
CLDW varchar(1),
CLJS varchar(50),
CONSTRAINT FK_ID FOREIGN KEY (DLID) REFERENCES tb_category_kind(DLID)	
)engine innodb default charset utf8 COMMENT='材料表';



DROP TABLE IF EXISTS tb_dept;
create table tb_dept
(  
KSID smallint(4) zerofill auto_increment primary key,
KSMC varchar(10) not null default ' ' unique
)engine innodb default charset utf8 COMMENT ='申请科室表';



DROP TABLE IF EXISTS tb_stock_out;
create table tb_stock_out
(  
CKID mediumint(8) zerofill auto_increment primary key,
CKSJ date not null default '2016-01-01',
CLID smallint(4) zerofill,
SQSL tinyint not null default 0,
SFSL tinyint not null default 0,
KSID smallint(4) zerofill,
YGID tinyint(3) zerofill,
CONSTRAINT FK_CLID FOREIGN KEY (CLID) REFERENCES tb_category(CLID),
CONSTRAINT FK_KSID FOREIGN KEY (KSID) REFERENCES tb_dept(KSID),
CONSTRAINT FK_YGID FOREIGN KEY (YGID) REFERENCES tb_employee(YGID)	
)engine innodb default charset utf8 COMMENT = '出库详情表';

#添加外键
alter table tb_stock_out add constraint FK_KSID Foreign key (KSID) references tb_dept(KSID);

#更改字段
alter table tb_category change CLBH CLID smallint(4) zerofill auto_increment;

#添加唯一索引
ALTER TABLE tb_category_kind ADD UNIQUE (dlmc); 

#添加视图
create view view_detail as 
select sout.CKID as '出库编号',sout.CKSJ as '出库时间',cat.CLMC as '品名',sout.SQSL as '申请数量',sout.SFSL as '实发数量',cat.CLDW as '材料单位',dept.KSMC as '申请科室',emp.YGXM as '领物人'
from tb_stock_out as sout inner join tb_category as cat
on sout.CLID = cat.CLID
inner join tb_dept as dept
on sout.KSID = dept.KSID
inner join tb_employee as emp
on sout.YGID = emp.YGID;



CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `view_cat` AS select  `tb_category`.`CLID` AS `材料编号`,  `tb_category`.`CLMC` AS `材料名称`,  `tb_category`.`CLDW` AS `材料单位` from `tb_category`;



CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `view_ksxx` AS select  `tb_dept`.`KSID` AS `科室编号`,  `tb_dept`.`KSMC` AS `科室名称` from `tb_dept`;

#删除视图
drop view view_detail;



#添加存储过程
DELIMITER $
CREATE PROCEDURE p_addDept(KSMC VARCHAR(10))
MOIDIFIES SQL DATA
BEGIN
 INSERT INTO tb_Dept
 VALUES
 (NULL,KSMC);
END&




#插入职工数据
INSERT INTO tb_employee
VALUES
(1,'曹宏艳'),
(2,'朱国强'),
(3,'于智慧'),
(4,'戴彬彬'),
(5,'张晓杰');



#给字段写注释
CREATE TABLE `tb_drug` (  
`id` varchar(32) NOT NULL,  
`flmc` varchar(64) DEFAULT '',  
`flmcId` varchar(32) DEFAULT NULL,  
`ypmc` varchar(64) NOT NULL DEFAULT '', 
 `yj` varchar(64) NOT NULL DEFAULT '', 
 `toh` varchar(64) DEFAULT '', 
 execute_date` datetime DEFAULT NULL, 
 `execute_draw` mediumtext,  
`ddd` double(8,3) DEFAULT NULL, 
 `ddd_unit` varchar(32) DEFAULT NULL,  
`modify_user` varchar(32) DEFAULT NULL,  
`userdefined` tinyint(4) DEFAULT NULL COMMENT '2：用户自定义；空或其他值：非用户定义',  PRIMARY KEY (`id`),  UNIQUE KEY `id` (`id`),  UNIQUE KEY `idx_drug_code_unique` (`code`),  KEY `Index_2` (`ypmc`),  KEY `Index_3` (`flmc`),  KEY `Index_4` (`code`),  KEY `NewIndex1` (`flmcId`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='药品表';


#添加出库信息
INSERT INTO tb_stock_out
VALUES
(NULL,'2016-01-01',1,1,1,1,3);
依次为主键，出库时间，材料编号，申请数量，实发数量，申请科室编号，领物人编号
主键自增长，所以为空。

#添加申请科室信息
INSERT INTO tb_dept 
VALUES
(NULL,'一站式');



#添加材料信息
INSERT INTO tb_category VALUES
(NULL，1,'18','只','胃镜室，病理科'),
(NULL，1,'ZP-101','只','三星，京瓷');
依次为主键，大类编号，材料名称，材料单位，材料介绍




#查看出库详细信息
SELECT * FROM view_detail;
或者
CALL p_show_stock;



#创建存储过程，统计出库信息
CREATE DEFINER=`root`@`%` PROCEDURE `p_show_tj_stock`()
BEGIN    

SELECT t1.CKSJ AS '出库时间',cat.CLMC AS '品名', t1.sl AS '实发数量',cat.CLDW AS '材料单位', dept.KSMC AS '科室名称' FROM
(SELECT CKSJ,CLID,KSID,SUM(SFSL) AS sl FROM tb_stock_out GROUP BY CKSJ,KSID,CLID) AS t1 INNER JOIN tb_category AS cat
ON t1.CLID = CAT.CLID
INNER JOIN tb_dept dept
ON t1.KSID = dept.KSID
ORDER BY t1.CKSJ,dept.KSMC;
END;




视图
view_cat 材料信息
view_detail 出库详细信息
view_ksxx 申请科室信息



存储过程
p_tj_stock_date（Y,M）
查询某年某月出库统计信息，例：CALL p_tj_stock_date(2016,12);


p_q_cat('mc');
查询是否有该材料，例：CALL p_q_cat('278');

